{"version":3,"sources":["firebaseConfig.js","db/db.js","components/Chart/PieChart.js","components/Chart/LineChart.js","components/Chart/BarChart.js","components/Chart/Chart.js","Utils/calendar.js","components/Countdown/Countdown.js","components/Modal/Modal.js","components/TodoCard/TodoCard.js","components/Sidebar/Sidebar.js","components/Profile/Profile.js","components/Dashboard/Dashboard.js","page/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","provider","firebase","auth","GoogleAuthProvider","initializeApp","setPersistence","Auth","Persistence","LOCAL","db","firestore","settings","timestampsInSnapshots","TODO_CLC","signOut","then","console","log","catch","error","fetchTodosDB","user","a","todos","todosRef","collection","doc","uid","get","querySnapshot","forEach","push","data","id","updatePoints","todo","time","Date","now","toISOString","split","points","parseInt","priority","numberArr","where","resp","empty","add","date","count","document","newPoints","countArray","ref","update","fetchPoints","pointsRef","snap","getPriorityScore","priorityScore","undefined","length","pt","val","index","PieChart","useState","window","innerWidth","screenWidth","setScreenWidth","useEffect","addEventListener","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBorderColor","height","width","options","maintainAspectRatio","legend","fontSize","getLabelDates","setDate","getDate","j","final","timeArr","getDateScore","dates","getISODates","score","dt","ptArr","filter","reduce","acc","LineChart","label","scales","yAxes","ticks","beginAtZero","BarChart","Chart","setPoints","className","getString","st","replace","calendarURLGen","quote","title","content","desc","start","schedule","isSchedule","duration","end","getTime","s","e","toString","Countdown","giveUpFn","completeFn","COLOR_CODES","info","color","warning","threshold","alert","TIME_LIMIT","timePassed","timeLeft","timerInterval","remainingPathColor","setInterval","getElementById","innerHTML","formatTime","setCircleDasharray","setRemainingPathColor","onTimesUp","audio","setAudio","playing","setPlaying","startTimer","Audio","play","pause","clearInterval","minutes","Math","floor","seconds","classList","remove","circleDasharray","rawTimeFraction","calculateTimeFraction","toFixed","setAttribute","viewBox","xmlns","cx","cy","r","strokeDasharray","class","d","onClick","icon","faExclamationCircle","size","faCheckCircle","faPauseCircle","faPlayCircle","Modal","closeModalHandler","addTodoItem","todoContent","setTodoContent","todoDuration","setTodoDuration","todoSchedule","setTodoSchedule","setIsSchedule","autoFocus","placeholder","value","onChange","event","target","Slider","defaultValue","getAriaValueText","aria-labelledby","step","marks","min","max","valueLabelDisplay","Checkbox","checked","inputProps","TextField","type","InputLabelProps","shrink","style","transition","Quote","markTodoDone","bgColor","deleteTodo","setTimerValues","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","faCheckDouble","href","rel","faCalendarCheck","faTrash","TodoList","React","memo","quotes","map","TodoCard","addTodoToDB","markTodoToDB","deleteTodoToDB","allTodos","todosItems","setTodoItems","showModal","setShowModal","timerState","setTimerState","t","completed","element","faPlusCircle","xtodos","xtodo","showTimer","newId","onDragEnd","result","destination","source","list","startIndex","endIndex","Array","from","splice","removed","reorder","droppableId","droppableProps","ariaHideApp","isOpen","contentLabel","Sidebar","showChartFn","showProfileFn","faUserCircle","faChartPie","faSignOutAlt","getTotalPoints","getMostProductiveDay","sort","b","getLongestStreak","dateArr","maxCount","currCount","getCurrentStreak","reverse","getCompletedTodos","getLeftTodos","Profile","setAllTodos","name","email","img","userDetails","setUserDetails","todoArr","userData","isAnonymous","displayName","photoURL","src","alt","faMedal","faFlagCheckered","faClipboardList","faLightbulb","faStar","faRunning","Dashboard","isAuthorized","showChart","setShowChart","showProfile","setShowProfile","headingClassName","addTodoDB","markTodoDB","delete","deleteTodoDB","dashboardItems","onRequestClose","shouldCloseOnEsc","open","onClose","aria-describedby","Home","setIsAuthorized","onAuthStateChanged","logIn","signInWithPopup","errorMessage","message","logInAnonymous","signInAnonymously","paddingLeft","faUser","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba70f8fe.chunk.js","sourcesContent":["const firebaseConfig = {\n    apiKey: 'AIzaSyC32KNYFj_GjSEQppSE9nDrgc1QZuVo3X8',\n    authDomain: 'tidy-up-32957.firebaseapp.com',\n    projectId: 'tidy-up-32957',\n    storageBucket: 'tidy-up-32957.appspot.com',\n    messagingSenderId: '237484609062',\n    appId: '1:237484609062:web:2c8ccca0b1a7c32a0a20e7',\n};\n\nexport default firebaseConfig;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport firebaseConfig from '../firebaseConfig';\n// import TodoCard from '../components/TodoCard/TodoCard';\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n\nconst db = firebase.firestore();\ndb.settings({ timestampsInSnapshots: true });\n\nconst TODO_CLC = 'todo-react-trial';\n\n// const addDB = (user) => {\n//     if (user.email) {\n//         db.collection('todo-react-trial')\n//             .add({\n//                 email: user.email,\n//                 isAnonymous: user.isAnonymous,\n//             })\n//             .then((resp) => {\n//                 alert('Document added');\n//             });\n//     } else {\n//         db.collection('todo-react-trial')\n//             .add({\n//                 uid: user.uid,\n//                 isAnonymous: user.isAnonymous,\n//             })\n//             .then((resp) => {\n//                 alert('Document added');\n//             });\n//     }\n// };\n\nconst signOut = () => {\n    firebase\n        .auth()\n        .signOut()\n        .then(() => {\n            // setIsAuthorized(false);\n            // setUserDetails(null);\n            console.log('Sign out successful');\n        })\n        .catch((error) => {\n            // An error happened.\n        });\n};\n\nconst addTodoDB = (user, todo) => {\n    db.collection(TODO_CLC)\n        .doc(user.uid)\n        .collection('todos')\n        .add({ ...todo, completed: false })\n        .then(function () {\n            console.log('ADDED:', todo);\n        });\n};\n\nconst markTodoDB = (user, todo) => {\n    console.log('Marking.. ', todo);\n    let todosRef = db.collection(TODO_CLC).doc(user.uid).collection('todos');\n    todosRef\n        .where('id', '==', todo.id)\n        .where('priority', '==', todo.priority)\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                doc.ref.update({\n                    completed: true,\n                });\n                // doc.data() is never undefined for query doc snapshots\n                console.log(doc.id, ' => ', doc.data());\n            });\n        })\n        .catch((error) => {\n            console.log('Error getting documents: ', error);\n        });\n};\n\nconst deleteTodoDB = (user, todo) => {\n    console.log('Deleting... ', todo);\n    let todosRef = db.collection(TODO_CLC).doc(user.uid).collection('todos');\n    todosRef\n        .where('id', '==', todo.id)\n        .where('priority', '==', todo.priority)\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                doc.ref\n                    .delete()\n                    .then(() => {\n                        console.log('Document deleted...');\n                    })\n                    .catch((error) => {\n                        console.log('Error getting documents: ', error);\n                    });\n                // doc.data() is never undefined for query doc snapshots\n                console.log(doc.id, ' => ', doc.data());\n            });\n        })\n        .catch((error) => {\n            console.log('Error getting documents: ', error);\n        });\n};\n\nconst fetchTodosDB = async (user) => {\n    console.log('Fetching Docs');\n    let todos = [];\n    let todosRef = db.collection(TODO_CLC).doc(user.uid).collection('todos');\n    await todosRef\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                todos.push(doc.data());\n                console.log(doc.id, ' => ', doc.data());\n            });\n        })\n        .catch((error) => {\n            console.log('Error getting documents: ', error);\n        });\n    console.log('DB.JS', todos);\n    return todos;\n};\n\nconst updatePoints = async (user, todo) => {\n    const time = new Date();\n    const now = time.toISOString().split('T')[0];\n    let points = 5 - parseInt(todo.priority) + 2;\n    let numberArr = [0, 0, 0, 0];\n    numberArr[todo.priority - 1] = 1;\n    let resp = await db\n        .collection(TODO_CLC)\n        .doc(user.uid)\n        .collection('points')\n        .where('date', '==', now)\n        .get();\n\n    if (resp.empty) {\n        db.collection(TODO_CLC)\n            .doc(user.uid)\n            .collection('points')\n            .add({\n                date: now,\n                points: points,\n                count: numberArr,\n            })\n            .then(function () {\n                console.log('Added points: ', points);\n            });\n    } else {\n        resp.forEach((document) => {\n            const newPoints = parseInt(document.data().points) + points;\n            let countArray = document.data().count;\n            console.log(countArray);\n            countArray[todo.priority - 1] += 1;\n            document.ref.update({\n                date: now,\n                points: newPoints,\n                count: countArray,\n            });\n        });\n    }\n};\n\nconst fetchPoints = async (user) => {\n    console.log('Fetching Points');\n    let points = [];\n    let pointsRef = db.collection(TODO_CLC).doc(user.uid).collection('points');\n\n    await pointsRef\n        .get()\n        .then((snap) => {\n            snap.forEach((doc) => {\n                points.push(doc.data());\n                console.log(doc.id, ' => ', doc.data());\n            });\n        })\n        .catch((error) => {\n            console.log('Error getting documents: ', error);\n        });\n    console.log('Points: ', points);\n    return points;\n};\n\nexport {\n    provider,\n    addTodoDB,\n    markTodoDB,\n    deleteTodoDB,\n    signOut,\n    fetchTodosDB,\n    updatePoints,\n    fetchPoints,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nconst getPriorityScore = (points) => {\n    let priorityScore = [0, 0, 0, 0];\n    if (points === undefined || points.length === 0) {\n        return priorityScore;\n    } else {\n        points.forEach((pt) => {\n            pt.count.forEach((val, index) => {\n                priorityScore[index] += val;\n            });\n        });\n        return priorityScore;\n    }\n};\n\nfunction PieChart({ points }) {\n    let [screenWidth, setScreenWidth] = useState(window.innerWidth);\n    useEffect(() => {\n        function updateWidth() {\n            setScreenWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', updateWidth);\n    });\n\n    return (\n        <Pie\n            data={{\n                labels: [\n                    'High Importance + Urgent',\n                    'High Importance + Not Urgent',\n                    'Low Importance + Urgent',\n                    'Low Importance + Not Urgent',\n                ],\n                datasets: [\n                    {\n                        data: getPriorityScore(points),\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(255, 206, 86, 1)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(255, 206, 86, 1)',\n                        ],\n                        borderWidth: 2,\n                        hoverBorderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(255, 206, 86, 1)',\n                        ],\n                    },\n                ],\n            }}\n            height={screenWidth <= 768 ? 300 : 400}\n            width={screenWidth <= 768 ? 450 : 600}\n            options={{\n                maintainAspectRatio: false,\n\n                legend: {\n                    labels: {\n                        fontSize: 15,\n                    },\n                },\n            }}\n        />\n    );\n}\n\nexport default PieChart;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst getLabelDates = () => {\n    const time = new Date();\n    const size = 10;\n    time.setDate(time.getDate() - size);\n    let now = time.toISOString().split('T')[0];\n    let j = 0;\n    let final = [];\n    while (j < size) {\n        time.setDate(time.getDate() + 1);\n        now = time.toISOString().split('T')[0];\n        let timeArr = now.split('-');\n        final.push(timeArr[2] + '/' + timeArr[1] + '/' + timeArr[0]);\n        j += 1;\n    }\n    console.log(final);\n    return final;\n};\n\nconst getISODates = () => {\n    const time = new Date();\n    const size = 10;\n    time.setDate(time.getDate() - size);\n    let now = time.toISOString().split('T')[0];\n    let j = 0;\n    let final = [];\n    while (j < size) {\n        time.setDate(time.getDate() + 1);\n        now = time.toISOString().split('T')[0];\n        final.push(now);\n        j += 1;\n    }\n    console.log(final);\n    return final;\n};\n\nconst getDateScore = (points) => {\n    const dates = getISODates();\n    let score = [];\n    dates.forEach((dt) => {\n        let ptArr = points.filter((pt) => pt.date === dt);\n        score.push(ptArr.reduce((acc, pt) => acc + pt.points, 0));\n    });\n    return score;\n};\nfunction LineChart({ points }) {\n    return (\n        <Line\n            data={{\n                labels: getLabelDates(),\n                datasets: [\n                    {\n                        label: 'Daily Performance',\n                        data: getDateScore(points),\n                        backgroundColor: ['rgba(75, 0, 130,0.6)'],\n\n                        borderWidth: 1,\n                    },\n                ],\n            }}\n            height={400}\n            width={600}\n            options={{\n                maintainAspectRatio: false,\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                beginAtZero: true,\n                            },\n                        },\n                    ],\n                },\n                legend: {\n                    labels: {\n                        fontSize: 25,\n                    },\n                },\n            }}\n        />\n    );\n}\n\nexport default LineChart;\n","import { red } from '@material-ui/core/colors';\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst getPriorityScore = (points) => {\n    let priorityScore = [0, 0, 0, 0];\n    if (points === undefined || points.length === 0) {\n        return priorityScore;\n    } else {\n        points.forEach((pt) => {\n            pt.count.forEach((val, index) => {\n                priorityScore[index] += val;\n            });\n        });\n        return priorityScore;\n    }\n};\n\nfunction BarChart({ points }) {\n    let [screenWidth, setScreenWidth] = useState(window.innerWidth);\n    useEffect(() => {\n        function updateWidth() {\n            setScreenWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', updateWidth);\n    });\n\n    return (\n        <Bar\n            data={{\n                labels: ['1', '2', '3', '4'],\n                datasets: [\n                    {\n                        label: 'Priority score',\n                        data: getPriorityScore(points),\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(255, 206, 86, 1)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(255, 206, 86, 1)',\n                        ],\n                        borderWidth: 2,\n                        hoverBorderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(255, 206, 86, 1)',\n                        ],\n                    },\n                ],\n            }}\n            height={screenWidth <= 768 ? 150 : 400}\n            width={screenWidth <= 768 ? 225 : 600}\n            options={{\n                maintainAspectRatio: true,\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                beginAtZero: true,\n                            },\n                        },\n                    ],\n                },\n                legend: {\n                    labels: {\n                        fontSize: 15,\n                    },\n                },\n            }}\n        />\n    );\n}\n\nexport default BarChart;\n","import React, { useState, useEffect } from 'react';\nimport { fetchPoints } from '../../db/db';\nimport PieChart from './PieChart';\nimport LineChart from './LineChart';\nimport BarChart from './BarChart';\n\nfunction Chart({ user }) {\n    let [points, setPoints] = useState([]);\n\n    useEffect(() => {\n        console.log('Chart mounted...');\n        fetchPoints(user).then((ptArr) => {\n            setPoints(ptArr);\n        });\n    }, []);\n\n    useEffect(() => {\n        console.log('Points array upd', points);\n    }, [points]);\n\n    return (\n        <div>\n            <div>\n                <LineChart points={points} />\n            </div>\n            <div className=\"flex flex-col md:flex-row justify-around items-center pt-16\">\n                <div>\n                    <PieChart points={points} />\n                </div>\n                <div className=\"md:pt-0 pt-8 pb-8\">\n                    <BarChart points={points} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chart;\n\n/*\nPie: priority count\n6-Mar 13-Mar\nLine:\n*/\n","let getString = (st) => {\n    return st.replace(/-/g, '').replace(/:/g, '').split('.')[0] + 'Z';\n};\nexport default function calendarURLGen(quote) {\n    console.log(quote);\n    let title = quote.content;\n    let desc = '';\n    if (quote.priority === 1) {\n        desc = 'high importance and urgent';\n    } else if (quote.priority === 2) {\n        desc = 'high importance and not urgent';\n    } else if (quote.priority === 3) {\n        desc = 'low importance and urgent';\n    } else {\n        desc = 'low importance and not urgent';\n    }\n    let start = quote.schedule;\n\n    if (quote.isSchedule) {\n        let duration = quote.duration;\n\n        const end = new Date(\n            new Date(start).getTime() + duration * 60000\n        ).toISOString();\n        let s = getString(new Date(start).toISOString());\n        let e = getString(end.toString());\n        return `https://www.google.com/calendar/render?action=TEMPLATE&text=${title}&details=${desc}&dates=${s}%2F${e}`;\n    } else {\n        return `https://www.google.com/calendar/render?action=TEMPLATE&text=${title}&details=${desc}`;\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// import './Countdown.css';\nimport {\n    faCheckCircle,\n    faExclamationCircle,\n    faPlayCircle,\n    faPauseCircle,\n} from '@fortawesome/free-solid-svg-icons';\n//import video from './video.mp4';\n\nfunction Countdown({ todo, giveUpFn, completeFn }) {\n    const FULL_DASH_ARRAY = 283;\n    const WARNING_THRESHOLD = 10;\n    const ALERT_THRESHOLD = 5;\n\n    const COLOR_CODES = {\n        info: {\n            color: 'green',\n        },\n        warning: {\n            color: 'orange',\n            threshold: WARNING_THRESHOLD,\n        },\n        alert: {\n            color: 'red',\n            threshold: ALERT_THRESHOLD,\n        },\n    };\n    let TIME_LIMIT = null;\n    let timePassed = 0;\n    let timeLeft = null;\n    let timerInterval = null;\n    let remainingPathColor = COLOR_CODES.info.color;\n\n    async function startTimer(duration) {\n        //console.log(\"start timer called\");\n        TIME_LIMIT = duration;\n        timerInterval = setInterval(() => {\n            timePassed = timePassed += 1;\n            timeLeft = duration - timePassed;\n            if (document.getElementById('base-timer-label')) {\n                document.getElementById(\n                    'base-timer-label'\n                ).innerHTML = formatTime(timeLeft);\n            }\n            setCircleDasharray();\n            setRemainingPathColor(timeLeft);\n\n            if (timeLeft === 0) {\n                onTimesUp();\n            }\n        }, 1000);\n        console.log(timerInterval);\n    }\n\n    let [audio, setAudio] = useState();\n    let [playing, setPlaying] = useState(false);\n\n    useEffect(() => {\n        if (todo && todo.duration !== undefined) {\n            startTimer(todo.duration * 60);\n        }\n    }, [todo]);\n\n    useEffect(() => {\n        setAudio(new Audio(process.env.PUBLIC_URL + '/assets/rain.mp3'));\n        setPlaying(false);\n    }, []);\n    const play = () => {\n        // this.setState({ play: true, pause: false });\n        setPlaying(() => true);\n        audio.play();\n    };\n\n    const pause = () => {\n        // this.setState({ play: false, pause: true });\n        setPlaying(() => false);\n        audio.pause();\n    };\n\n    function onTimesUp() {\n        clearInterval(timerInterval);\n    }\n\n    function giveUp() {\n        onTimesUp();\n        giveUpFn();\n    }\n    function done() {\n        onTimesUp();\n        completeFn(todo);\n    }\n\n    function formatTime(time) {\n        const minutes = Math.floor(time / 60);\n        let seconds = time % 60;\n\n        if (seconds < 10) {\n            seconds = `0${seconds}`;\n        }\n\n        return `${minutes}:${seconds}`;\n    }\n\n    function setRemainingPathColor(timeLeft) {\n        const { alert, warning, info } = COLOR_CODES;\n        if (timeLeft <= alert.threshold) {\n            document\n                .getElementById('base-timer-path-remaining')\n                .classList.remove(warning.color);\n            document\n                .getElementById('base-timer-path-remaining')\n                .classList.add(alert.color);\n        } else if (timeLeft <= warning.threshold) {\n            document\n                .getElementById('base-timer-path-remaining')\n                .classList.remove(info.color);\n            document\n                .getElementById('base-timer-path-remaining')\n                .classList.add(warning.color);\n        }\n    }\n\n    function calculateTimeFraction() {\n        const rawTimeFraction = timeLeft / TIME_LIMIT;\n        return rawTimeFraction - (1 / TIME_LIMIT) * (1 - rawTimeFraction);\n    }\n\n    function setCircleDasharray() {\n        const circleDasharray = `${(\n            calculateTimeFraction() * FULL_DASH_ARRAY\n        ).toFixed(0)} 283`;\n\n        if (document.getElementById('base-timer-path-remaining')) {\n            document\n                .getElementById('base-timer-path-remaining')\n                .setAttribute('strokeDasharray', circleDasharray);\n        }\n    }\n\n    const playButton = () => (\n        <button onClick={play} className=\"\">\n            <FontAwesomeIcon size=\"3x\" icon={faPlayCircle} />\n        </button>\n    );\n    const pauseButton = () => (\n        <button onClick={pause}>\n            <FontAwesomeIcon size=\"3x\" icon={faPauseCircle} />\n        </button>\n    );\n\n    return (\n        <div className=\"countdown-wrap\">\n            <div id=\"app\" className=\"countdown-app border border-red-700\">\n                <div className=\"base-timer \">\n                    <svg\n                        className=\"base-timer__svg\"\n                        viewBox=\"0 0 100 100\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <g className=\"base-timer__circle\">\n                            <circle\n                                className=\"base-timer__path-elapsed\"\n                                cx=\"50\"\n                                cy=\"50\"\n                                r=\"45\"\n                            ></circle>\n                            <path\n                                id=\"base-timer-path-remaining\"\n                                strokeDasharray=\"283\"\n                                class={`base-timer__path-remaining ${remainingPathColor}`}\n                                d=\"\n                                M 50, 50\n                                m -45, 0\n                                a 45,45 0 1,0 90,0\n                                a 45,45 0 1,0 -90,0\"\n                            ></path>\n                        </g>\n                    </svg>\n                    <span id=\"base-timer-label\" className=\"base-timer__label\">\n                        {formatTime(timeLeft)}\n                    </span>\n                </div>\n            </div>\n            <div className=\"countdown-button-wrap w-80 pt-8 flex justify-around\">\n                <div\n                    onClick={giveUp}\n                    className=\"countdown-button px-4 py-4 hover:bg-red-500 cursor-pointer transform hover:scale-110\"\n                >\n                    <FontAwesomeIcon\n                        icon={faExclamationCircle}\n                        size=\"2x\"\n                        className=\"mr-2\"\n                    />{' '}\n                    Give Up\n                </div>\n                <div\n                    onClick={done}\n                    className=\"countdown-button px-4 py-4 hover:bg-green-500 cursor-pointer transform hover:scale-110\"\n                >\n                    <FontAwesomeIcon\n                        icon={faCheckCircle}\n                        size=\"2x\"\n                        className=\"mr-2\"\n                    />\n                    Done\n                </div>\n            </div>\n            <div className=\"countdown-button mt-4 p-1\">\n                {!playing ? playButton() : pauseButton()}\n            </div>\n        </div>\n    );\n}\n\nexport default Countdown;\n","import React, { useState } from 'react';\nimport { Slider, TextField, Checkbox } from '@material-ui/core';\n\nconst dateString = () => {\n    return new Date().toISOString();\n};\n\nexport default function Modal({ priority, closeModalHandler, addTodoItem }) {\n    const [todoContent, setTodoContent] = useState('');\n    const [todoDuration, setTodoDuration] = useState(25);\n    const [todoSchedule, setTodoSchedule] = useState(dateString());\n    const [isSchedule, setIsSchedule] = useState(false);\n\n    const todoContentChangeHanlder = (event) => {\n        setTodoContent(() => event.target.value);\n    };\n    const valuetext = (value) => {\n        setTodoDuration(() => value);\n        console.log(value);\n    };\n\n    return (\n        <>\n            <>\n                <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n                    <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                        {/*content*/}\n                        <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                            {/*header*/}\n                            <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n                                <h3 className=\"text-3xl font-semibold\">\n                                    Add New Todo\n                                </h3>\n                                <button\n                                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                                    onClick={closeModalHandler}\n                                >\n                                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                                        ×\n                                    </span>\n                                </button>\n                            </div>\n                            {/*body*/}\n                            <div className=\"relative p-6 flex-auto\">\n                                <form>\n                                    <div>\n                                        <label className=\"block text-lg\">\n                                            <span>Todo Title</span>\n                                        </label>\n                                        <input\n                                            autoFocus\n                                            className=\"text-lg rounded-l-lg mt-2 px-4 py-2 border text-gray-800 border-gray-200 bg-white focus:outline-none\"\n                                            placeholder=\"Water the plants!\"\n                                            value={todoContent}\n                                            onChange={todoContentChangeHanlder}\n                                        ></input>\n                                    </div>\n                                    <div className=\"mt-4\">\n                                        <label className=\"block text-lg\">\n                                            <p>\n                                                Duration:{' '}\n                                                <span className=\"font-bold\">\n                                                    {todoDuration} mins\n                                                </span>\n                                            </p>\n                                        </label>\n                                        <div className=\"mt-7\">\n                                            <Slider\n                                                defaultValue={25}\n                                                getAriaValueText={valuetext}\n                                                aria-labelledby=\"discrete-slider-small-steps\"\n                                                step={5}\n                                                marks\n                                                min={5}\n                                                max={60}\n                                                valueLabelDisplay=\"auto\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <label className=\"block text-lg\">\n                                            <span>Schedule</span>\n                                            <Checkbox\n                                                checked={isSchedule}\n                                                onChange={(e) => {\n                                                    setIsSchedule(\n                                                        e.target.checked\n                                                    );\n                                                }}\n                                                inputProps={{\n                                                    'aria-label':\n                                                        'primary checkbox',\n                                                }}\n                                            />\n                                        </label>\n\n                                        {isSchedule ? (\n                                            <TextField\n                                                id=\"datetime-local\"\n                                                type=\"datetime-local\"\n                                                value={todoSchedule}\n                                                onChange={(e) => {\n                                                    setTodoSchedule(\n                                                        e.target.value\n                                                    );\n                                                }}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        ) : null}\n                                    </div>\n                                </form>\n                            </div>\n                            {/*footer*/}\n                            <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\n                                <button\n                                    className=\"text-red-500 hover:bg-red-500 hover:text-white background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 rounded\"\n                                    type=\"button\"\n                                    style={{ transition: 'all .15s ease' }}\n                                    onClick={closeModalHandler}\n                                >\n                                    Close\n                                </button>\n                                <button\n                                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 transform hover:scale-110\"\n                                    type=\"button\"\n                                    style={{ transition: 'all .15s ease' }}\n                                    onClick={() => {\n                                        addTodoItem(\n                                            todoContent,\n                                            priority,\n                                            todoDuration,\n                                            todoSchedule,\n                                            isSchedule\n                                        );\n                                        setTodoContent('');\n                                        closeModalHandler();\n                                    }}\n                                >\n                                    Save Changes\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n            </>\n        </>\n    );\n}\n/*\naddTodoItem = (\n    content,\n    priority,\n    duration,\n    scheduleStart,\n    scheduleEnd\n)\n*/\n","import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ReactModal from 'react-modal';\nimport calendarURLGen from '../../Utils/calendar';\nimport Countdown from '../Countdown/Countdown';\n\nimport {\n    faPlusCircle,\n    faPlayCircle,\n    faCheckDouble,\n    faCalendarCheck,\n    faTrash,\n} from '@fortawesome/free-solid-svg-icons';\n\n// import Todos from '../Todos/Todos';\nimport Modal from '../Modal/Modal';\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    ...draggableStyle,\n});\n\nfunction Quote({\n    quote,\n    index,\n    markTodoDone,\n    bgColor,\n    deleteTodo,\n    setTimerValues,\n}) {\n    return (\n        <Draggable draggableId={quote.id} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                    )}\n                    className=\"pt-3\"\n                >\n                    <div\n                        className={`mx-2 rounded-lg bg-${bgColor}-500 hover:bg-${bgColor}-600 transtion duration-200 text-white py-1 grid grid-cols-3 items-center todo-reveal`}\n                    >\n                        <div className=\"px-2 text-xl col-span-2\">\n                            {quote.content}\n                        </div>\n                        <div className=\"flex justify-around items-center\">\n                            <div\n                                className={`text-${bgColor}-400 cursor-pointer hover:text-green-300 tooltip`}\n                                onClick={() => {\n                                    markTodoDone(quote);\n                                }}\n                            >\n                                <FontAwesomeIcon\n                                    icon={faCheckDouble}\n                                    size=\"2x\"\n                                />\n                                <span className=\"tooltiptext\">\n                                    Mark as done\n                                </span>\n                            </div>\n                            <a\n                                href={calendarURLGen(quote)}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className={`text-${bgColor}-400 hover:text-indigo-300 tooltip`}\n                            >\n                                <FontAwesomeIcon\n                                    icon={faCalendarCheck}\n                                    size=\"2x\"\n                                />\n                                <span className=\"tooltiptext\">\n                                    Add to calender\n                                </span>\n                            </a>\n                            <div\n                                className={`text-${bgColor}-400 cursor-pointer hover:text-gray-300 tooltip`}\n                                onClick={() => {\n                                    setTimerValues(quote);\n                                }}\n                            >\n                                <FontAwesomeIcon\n                                    icon={faPlayCircle}\n                                    size=\"2x\"\n                                />\n                                <span className=\"tooltiptext\">Start timer</span>\n                            </div>\n                            <div\n                                className={`text-${bgColor}-400 cursor-pointer hover:text-black tooltip`}\n                                onClick={() => {\n                                    deleteTodo(quote);\n                                }}\n                            >\n                                <FontAwesomeIcon icon={faTrash} size=\"2x\" />\n                                <span className=\"tooltiptext\">Delete</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </Draggable>\n    );\n}\n\nconst TodoList = React.memo(function QuoteList({\n    quotes,\n    bgColor,\n    markTodoDone,\n    deleteTodo,\n    setTimerValues,\n}) {\n    return quotes.map((quote, index) => (\n        <Quote\n            quote={quote}\n            index={index}\n            key={quote.id}\n            markTodoDone={markTodoDone}\n            deleteTodo={deleteTodo}\n            bgColor={bgColor}\n            setTimerValues={setTimerValues}\n        />\n    ));\n});\n\nfunction TodoCard({\n    bgColor,\n    priority,\n    addTodoToDB,\n    markTodoToDB,\n    deleteTodoToDB,\n    allTodos,\n}) {\n    let [todosItems, setTodoItems] = useState(() => []);\n    let [showModal, setShowModal] = useState(false);\n    let [timerState, setTimerState] = useState({});\n\n    const bgColorClass = () => {\n        return `bg-${bgColor}-200`;\n    };\n\n    useEffect(() => {\n        console.log('Card', allTodos);\n        setTodoItems(() =>\n            allTodos.filter((t) => t.priority === priority && !t.completed)\n        );\n    }, [allTodos]);\n\n    const element = (\n        <div\n            className={`rounded-full border border-${bgColor}-700 shadow-md hover:shadow-lg bg-white text-${bgColor}-700 transform transition duration-300 ease-in-out hover:scale-125`}\n        >\n            <FontAwesomeIcon icon={faPlusCircle} size=\"3x\" />\n        </div>\n    );\n\n    function onDragEnd(result) {\n        console.log(result);\n        if (!result.destination) {\n            return;\n        }\n\n        if (result.destination.index === result.source.index) {\n            return;\n        }\n\n        const quotes = reorder(\n            todosItems,\n            result.source.index,\n            result.destination.index\n        );\n\n        setTodoItems(quotes);\n    }\n\n    const markTodoDone = (todo) => {\n        markTodoToDB(todo);\n        setTodoItems((xtodos) =>\n            xtodos.filter((xtodo) => xtodo.id !== todo.id)\n        );\n    };\n\n    const deleteTodo = (todo) => {\n        deleteTodoToDB(todo);\n        setTodoItems((xtodos) =>\n            xtodos.filter((xtodo) => xtodo.id !== todo.id)\n        );\n    };\n\n    const giveUpFn = () => {\n        setTimerState(() => {\n            return {\n                showTimer: false,\n            };\n        });\n    };\n\n    const completeFn = (todo) => {\n        markTodoDone(todo);\n        setTimerState(() => {\n            return {\n                showTimer: false,\n            };\n        });\n    };\n\n    const setTimerValues = (todo) => {\n        setTimerState(() => {\n            return {\n                todo: todo,\n                showTimer: true,\n                giveUpFn: giveUpFn,\n                completeFn: completeFn,\n            };\n        });\n    };\n\n    const addTodoItem = (content, priority, duration, schedule, isSchedule) => {\n        const newId = (todosItems.length + 1).toString();\n        if (!isSchedule) {\n            schedule = '';\n        }\n        addTodoToDB({\n            id: newId,\n            content,\n            priority,\n            duration,\n            schedule,\n            isSchedule,\n        });\n        setTodoItems((xtodos) => [\n            ...xtodos,\n            {\n                id: newId,\n                content,\n                priority,\n                duration,\n                schedule,\n                isSchedule,\n            },\n        ]);\n    };\n\n    const closeModalHandler = () => {\n        setShowModal(false);\n    };\n\n    const todoListItems = (\n        <div className=\"h-full overflow-hidden relative\">\n            <div\n                className={`${bgColorClass()} h-full overflow-y-scroll relative rounded-lg`}\n            >\n                {showModal ? (\n                    <Modal {...{ priority, closeModalHandler, addTodoItem }} />\n                ) : null}\n                <div className=\"mb-16\">\n                    <DragDropContext onDragEnd={onDragEnd}>\n                        <Droppable droppableId=\"list\">\n                            {(provided) => (\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                >\n                                    <TodoList\n                                        quotes={todosItems}\n                                        markTodoDone={markTodoDone}\n                                        deleteTodo={deleteTodo}\n                                        bgColor={bgColor}\n                                        setTimerValues={setTimerValues}\n                                    />\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </div>\n            </div>\n            <button\n                className=\"absolute bottom-0 right-0 pb-3 pr-3 outline-none focus:outline-none\"\n                type=\"button\"\n                onClick={() => setShowModal(true)}\n            >\n                {element}\n            </button>\n            <div>\n                <ReactModal\n                    ariaHideApp={false}\n                    isOpen={timerState.showTimer}\n                    contentLabel=\"Minimal Modal Example\"\n                >\n                    <Countdown\n                        todo={timerState.todo}\n                        giveUpFn={timerState.giveUpFn}\n                        completeFn={timerState.completeFn}\n                    />\n                </ReactModal>\n            </div>\n        </div>\n    );\n\n    return todoListItems;\n}\n\nexport default TodoCard;\n\n/*\n{\n    id,\n    content,\n    priority,\n    duration,\n    scheduleStart,\n    scheduleEnd\n}\n[\n  {\n    \"name\": \"State\",\n    \"value\": [\n\n    ],\n    \"subHooks\": []\n  },\n  {\n    \"name\": \"State\",\n    \"value\": false,\n    \"subHooks\": []\n  }\n]\n\n*/\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { signOut } from '../../db/db';\n\nimport {\n    faSignOutAlt,\n    faChartPie,\n    faUserCircle,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Sidebar({ showChartFn, showProfileFn }) {\n    return (\n        <div className=\"h-screen z-30 fixed inset-y-0 left-0 w-14\">\n            <div className=\"h-screen w-14 hidden md:flex items-center\">\n                <div className=\" w-full rounded-3xl flex flex-col rounded-l-none bg-gray-300\">\n                    <div\n                        className=\"px-2 py-6 cursor-pointer font-bold rounded-3xl rounded-l-none rounded-b-none text-gray-800 hover:bg-yellow-400 hover:text-white transform hover:translate-x-1 transition duration-300\"\n                        onClick={showProfileFn}\n                    >\n                        <FontAwesomeIcon icon={faUserCircle} size=\"2x\" />\n                    </div>\n\n                    <div\n                        className=\"px-2 py-6 cursor-pointer font-bold text-gray-800 hover:bg-green-400 hover:text-white transform hover:translate-x-1 transition duration-300\"\n                        onClick={showChartFn}\n                    >\n                        <FontAwesomeIcon icon={faChartPie} size=\"2x\" />\n                    </div>\n                    <div\n                        onClick={signOut}\n                        className=\"px-2 py-6 cursor-pointer font-bold rounded-3xl rounded-l-none rounded-t-none text-gray-800 hover:bg-red-400 hover:text-white transform hover:translate-x-1 transition duration-300\"\n                    >\n                        <FontAwesomeIcon icon={faSignOutAlt} size=\"2x\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"w-screen bg-gray-400 rounded-3xl rounded-b-none fixed bottom-0 h-16 flex md:hidden justify-items-center items-center\">\n                <div className=\"flex w-full justify-around\">\n                    <div\n                        className=\"px-2 py-4 rounded-3xl rounded-b-none rounded-r-none font-bold text-gray-800 hover:bg-yellow-400 hover:text-white w-full text-center transform hover:-translate-y-1 transition duration-300\"\n                        onClick={showProfileFn}\n                    >\n                        <FontAwesomeIcon icon={faUserCircle} size=\"2x\" />\n                    </div>\n\n                    <div\n                        className=\"px-2 py-4 font-bold text-gray-800 hover:bg-green-400 hover:text-white w-full text-center transform hover:-translate-y-1 transition duration-300\"\n                        onClick={showChartFn}\n                    >\n                        <FontAwesomeIcon icon={faChartPie} size=\"2x\" />\n                    </div>\n                    <div\n                        onClick={signOut}\n                        className=\"px-2 py-4 rounded-3xl rounded-b-none rounded-l-none font-bold text-gray-800 hover:bg-red-400 hover:text-white w-full text-center transform hover:-translate-y-1 transition duration-300\"\n                    >\n                        <FontAwesomeIcon icon={faSignOutAlt} size=\"2x\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faMedal,\n    faFlagCheckered,\n    faClipboardList,\n    faStar,\n    faRunning,\n    faLightbulb,\n} from '@fortawesome/free-solid-svg-icons';\nimport React, { useEffect, useState } from 'react';\nimport { fetchPoints, fetchTodosDB } from '../../db/db';\n\nconst getTotalPoints = (points) => {\n    return points.reduce((acc, pt) => acc + pt.points, 0);\n};\n\nconst getMostProductiveDay = (points) => {\n    const ptArr = points.map((pt) => [pt.points, pt.date]);\n    ptArr.sort(function (a, b) {\n        return b[0] - a[0];\n    });\n\n    if (ptArr.length > 0) return ptArr[0];\n    else return [0, 'N/A'];\n};\n\nconst getLongestStreak = (points) => {\n    const dateArr = points.map((pt) => pt.date);\n    dateArr.sort();\n    let maxCount = 0;\n    let currCount = 0;\n    if (dateArr.length === 0) {\n        return 0;\n    } else if (dateArr.length === 1) {\n        return 1;\n    } else {\n        for (let index = 1; index < dateArr.length; index += 1) {\n            let now = new Date(dateArr[index]).getTime();\n            let prev = new Date(dateArr[index - 1]).getTime();\n            if (now - prev <= 24 * 60 * 60 * 1000) {\n                currCount += 1;\n            } else {\n                currCount = 0;\n            }\n\n            maxCount = Math.max(maxCount, currCount);\n        }\n\n        return maxCount;\n    }\n};\n\nconst getCurrentStreak = (points) => {\n    const dateArr = points.map((pt) => pt.date);\n    dateArr.sort();\n    dateArr.reverse();\n    let currCount = 0;\n    if (dateArr.length === 0) {\n        return 0;\n    } else if (dateArr.length === 1) {\n        return 1;\n    } else {\n        for (let index = 1; index < dateArr.length; index += 1) {\n            let now = new Date(dateArr[index]).getTime();\n            let prev = new Date(dateArr[index - 1]).getTime();\n            if (prev - now <= 24 * 60 * 60 * 1000) {\n                currCount += 1;\n            } else {\n                break;\n            }\n        }\n\n        return currCount;\n    }\n};\n\nconst getCompletedTodos = (allTodos) => {\n    return allTodos.filter((todo) => todo.completed).length;\n};\n\nconst getLeftTodos = (allTodos) => {\n    return allTodos.filter((todo) => !todo.completed).length;\n};\n\nfunction Profile({ user }) {\n    const getUserDetails = (userData) => {\n        if (userData.isAnonymous) {\n            return {\n                name: 'Guest',\n                email: 'guest@address.com',\n                img:\n                    'https://raw.githubusercontent.com/arnabsen1729/static-content/master/tidy/default-avatar.png',\n            };\n        } else {\n            return {\n                name: userData.displayName,\n                email: userData.email,\n                img: userData.photoURL,\n            };\n        }\n    };\n    let [points, setPoints] = useState([]);\n    let [allTodos, setAllTodos] = useState([]);\n    let [userDetails, setUserDetails] = useState({\n        name: 'Guest',\n        email: 'guest@address.com',\n        img:\n            'https://raw.githubusercontent.com/arnabsen1729/static-content/master/tidy/default-avatar.png',\n    });\n\n    useEffect(() => {\n        console.log('Chart mounted...');\n        fetchPoints(user).then((ptArr) => {\n            setPoints(ptArr);\n        });\n        fetchTodosDB(user).then((todoArr) => {\n            setAllTodos(todoArr);\n        });\n    }, []);\n\n    useEffect(() => {\n        console.log('Points array upd', points);\n    }, [points]);\n\n    useEffect(() => {\n        setUserDetails(getUserDetails(user));\n    }, [user]);\n\n    useEffect(() => {\n        console.log('TODOS:', allTodos);\n    }, [allTodos]);\n\n    return (\n        <div className=\"border rounded-lg bg-white m-auto border-gray-400 mt-36 w-2/3 h-auto grid grid-cols-3\">\n            <div className=\"mt-12 col-span-2\">\n                <div className=\"flex justify-around\">\n                    <div className=\"\">\n                        <div className=\"w-48 h-48 relative mb-4\">\n                            <div className=\"group w-full h-full rounded-full overflow-hidden shadow-inner text-center bg-purple table cursor-pointer\">\n                                <img\n                                    src={userDetails.img}\n                                    alt=\"lovely avatar\"\n                                    className=\"object-cover object-center w-full h-full visible group-hover:hidden\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"pt-10\">\n                        <div className=\"text-4xl font-bold\">\n                            {userDetails.name}\n                        </div>\n                        <div className=\"text-2xl text-gray-700\">\n                            {userDetails.email}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex py-2 my-4 text-center px-4 justify-around\">\n                    <div className=\"w-1/3 px-2\">\n                        <div className=\"border-2 border-gray-200 px-4 py-6 rounded-lg\">\n                            <FontAwesomeIcon icon={faMedal} size=\"2x\" />\n                            <h2 className=\"title-font font-medium text-3xl text-gray-900\">\n                                {getTotalPoints(points)}\n                            </h2>\n                            <p className=\"leading-relaxed\">Points</p>\n                        </div>\n                    </div>\n                    <div className=\"w-1/3 px-2\">\n                        <div className=\"border-2 border-gray-200 px-4 py-6 rounded-lg\">\n                            <FontAwesomeIcon icon={faFlagCheckered} size=\"2x\" />\n                            <h2 className=\"title-font font-medium text-3xl text-gray-900\">\n                                {getCompletedTodos(allTodos)}\n                            </h2>\n                            <p className=\"leading-relaxed\">Completed Todos</p>\n                        </div>\n                    </div>\n                    <div className=\"w-1/3 px-2\">\n                        <div className=\"border-2 border-gray-200 px-4 py-6 rounded-lg\">\n                            <FontAwesomeIcon icon={faClipboardList} size=\"2x\" />\n                            <h2 className=\"title-font font-medium text-3xl text-gray-900\">\n                                {getLeftTodos(allTodos)}\n                            </h2>\n                            <p className=\"leading-relaxed\">Left Todos</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"mt-5\">\n                <div className=\"flex flex-col px-5 space-y-6\">\n                    <div className=\"\">\n                        <div className=\"border-l-8 border-red-600 bg-red-200 px-4 py-4\">\n                            <div className=\"flex justify-around\">\n                                <FontAwesomeIcon\n                                    icon={faMedal}\n                                    size=\"2x\"\n                                    className=\"my-auto\"\n                                />\n                                <div className=\"text-center\">\n                                    <p className=\"text-sm font-medium text-black-600 \">\n                                        Most productive\n                                    </p>\n                                    <p className=\"text-2xl font-bold text-gray-700\">\n                                        {getMostProductiveDay(points)[1]}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <div className=\"border-l-8 border-blue-600 bg-blue-200 px-4 py-4\">\n                            <div className=\"flex justify-around\">\n                                <FontAwesomeIcon\n                                    icon={faLightbulb}\n                                    size=\"2x\"\n                                    className=\"my-auto\"\n                                />\n                                <div className=\"text-center\">\n                                    <p className=\"text-sm font-medium text-black-600 \">\n                                        Max points\n                                    </p>\n                                    <p className=\"text-2xl font-bold text-gray-700\">\n                                        {getMostProductiveDay(points)[0]}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <div className=\"border-l-8 border-yellow-600 bg-yellow-200 px-4 py-4\">\n                            <div className=\"flex justify-around\">\n                                <FontAwesomeIcon\n                                    icon={faStar}\n                                    size=\"2x\"\n                                    className=\"my-auto\"\n                                />\n                                <div className=\"text-center\">\n                                    <p className=\"text-sm font-medium text-black-600 \">\n                                        Longest Streak\n                                    </p>\n                                    <p className=\"text-2xl font-bold text-gray-700\">\n                                        {getLongestStreak(points)}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <div className=\"border-l-8 border-green-600 bg-green-200 px-4 py-4\">\n                            <div className=\"flex justify-around\">\n                                <FontAwesomeIcon\n                                    icon={faRunning}\n                                    size=\"2x\"\n                                    className=\"my-auto\"\n                                />\n                                <div className=\"text-center\">\n                                    <p className=\"text-sm font-medium text-black-600 \">\n                                        Current Streak\n                                    </p>\n                                    <p className=\"text-2xl font-bold text-gray-700\">\n                                        {getCurrentStreak(points)}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport Chart from '../Chart/Chart';\nimport Modal from '@material-ui/core/Modal';\nimport {\n    markTodoDB,\n    addTodoDB,\n    deleteTodoDB,\n    fetchTodosDB,\n    updatePoints,\n} from '../../db/db';\nimport TodoCard from '../TodoCard/TodoCard';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Profile from '../Profile/Profile';\n\nfunction Dashboard({ user, isAuthorized }) {\n    let [allTodos, setAllTodos] = useState([]);\n    let [showChart, setShowChart] = useState(false);\n    let [showProfile, setShowProfile] = useState(false);\n    let headingClassName = (color) => {\n        return `text-3xl font-bold text-${color}-700`;\n    };\n\n    const addTodoToDB = (todo) => {\n        addTodoDB(user, todo);\n    };\n\n    const markTodoToDB = (todo) => {\n        updatePoints(user, todo);\n        markTodoDB(user, todo);\n    };\n\n    const deleteTodoToDB = (todo) => {\n        deleteTodoDB(user, todo);\n    };\n\n    useEffect(() => {\n        if (isAuthorized) {\n            fetchTodosDB(user).then((todos) => {\n                setAllTodos(() => todos);\n            });\n        }\n    }, [isAuthorized]);\n\n    const showChartFn = () => {\n        setShowChart(() => true);\n    };\n\n    const showProfileFn = () => {\n        setShowProfile(() => true);\n    };\n\n    const dashboardItems = (\n        <>\n            <Sidebar\n                showChartFn={showChartFn}\n                showProfileFn={showProfileFn}\n                allTodos={allTodos}\n            />\n            <div className=\"pl-0 md:pl-16 md:h-screen w-full md:pt-5\">\n                <div className=\"md:h-1/2 md:flex md:flex-row w-full\">\n                    <div className=\"h-96 md:h-full px-3 w-screen md:w-1/2 flex flex-col\">\n                        <h1 className={headingClassName('red')}>\n                            High Importance + Urgent\n                        </h1>\n                        <TodoCard\n                            priority={1}\n                            allTodos={allTodos}\n                            bgColor=\"red\"\n                            addTodoToDB={addTodoToDB}\n                            markTodoToDB={markTodoToDB}\n                            deleteTodoToDB={deleteTodoToDB}\n                        />\n                    </div>\n                    <div className=\"h-96 md:h-full px-3 w-screen md:w-1/2 flex flex-col\">\n                        <h1 className={headingClassName('blue')}>\n                            High Importance + Not Urgent\n                        </h1>\n                        <TodoCard\n                            priority={2}\n                            allTodos={allTodos}\n                            bgColor=\"blue\"\n                            addTodoToDB={addTodoToDB}\n                            markTodoToDB={markTodoToDB}\n                            deleteTodoToDB={deleteTodoToDB}\n                        />\n                    </div>\n                </div>\n                <div className=\"md:h-1/2 md:flex md:flex-row w-full pb-2 mb-16 md:mb-0\">\n                    <div className=\"h-96 md:h-full px-3 w-screen md:w-1/2 flex flex-col\">\n                        <h1 className={headingClassName('green')}>\n                            Low Importance + Urgent\n                        </h1>\n                        <TodoCard\n                            priority={3}\n                            bgColor=\"green\"\n                            allTodos={allTodos}\n                            addTodoToDB={addTodoToDB}\n                            markTodoToDB={markTodoToDB}\n                            deleteTodoToDB={deleteTodoToDB}\n                        />\n                    </div>\n                    <div className=\"h-96 md:h-full px-3 w-screen md:w-1/2 flex flex-col\">\n                        <h1 className={headingClassName('yellow')}>\n                            Low Importance + Not Urgent\n                        </h1>\n                        <TodoCard\n                            priority={4}\n                            allTodos={allTodos}\n                            bgColor=\"yellow\"\n                            addTodoToDB={addTodoToDB}\n                            markTodoToDB={markTodoToDB}\n                            deleteTodoToDB={deleteTodoToDB}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <ReactModal\n                        onRequestClose={() => setShowChart(false)}\n                        shouldCloseOnEsc={true}\n                        ariaHideApp={false}\n                        isOpen={showChart}\n                        contentLabel=\"Minimal Modal Example\"\n                    >\n                        <Chart user={user} />\n                    </ReactModal>\n                </div>\n                <div>\n                    {/* <ReactModal\n                        onRequestClose={() => setShowProfile(false)}\n                        shouldCloseOnEsc={true}\n                        ariaHideApp={false}\n                        isOpen={showProfile}\n                        contentLabel=\"Minimal Modal Example\"\n                    >\n                        <Profile user={user} />\n                    </ReactModal> */}\n                    <Modal\n                        open={showProfile}\n                        onClose={() => setShowProfile(false)}\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                    >\n                        <Profile user={user} allTodos={allTodos} />\n                    </Modal>\n                </div>\n            </div>\n        </>\n    );\n\n    return <>{dashboardItems}</>;\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n//import { Redirect } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faGoogle,\n    faUser,\n    faGooglePlusG\n} from '@fortawesome/free-solid-svg-icons';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport firebaseConfig from '../../firebaseConfig';\nimport { provider } from '../../db/db';\n\nconsole.log(firebaseConfig);\n\nfunction Home() {\n    let [isAuthorized, setIsAuthorized] = useState(false);\n    let [userDetails, setUserDetails] = useState(null);\n\n    useEffect(() => {\n        console.log('Mounted...');\n        console.log(isAuthorized);\n        firebase.auth().onAuthStateChanged(function (user) {\n            if (user) {\n                setUserDetails(user);\n                setIsAuthorized(true);\n            } else {\n                setIsAuthorized(false);\n                setUserDetails(null);\n            }\n        });\n    }, []);\n\n    const logIn = () => {\n        firebase\n            .auth()\n            .signInWithPopup(provider)\n            .then((result) => {\n                //@type {firebase.auth.OAuthCredential}\n                //var credential = result.credential;\n\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                //var token = credential.accessToken;\n\n                // The signed-in user info.\n                var user = result.user;\n                // console.log(user);\n                setUserDetails(user);\n                setIsAuthorized(true);\n                firebase\n                    .auth()\n                    .setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n\n                // ...\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                //var errorCode = error.code;\n\n                var errorMessage = error.message;\n                alert(errorMessage);\n\n                // The email of the user's account used.\n                //var email = error.email;\n\n                // The firebase.auth.AuthCredential type that was used.\n                //var credential = error.credential;\n            });\n    };\n\n    const logInAnonymous = () => {\n        firebase\n            .auth()\n            .signInAnonymously()\n            .then((result) => {\n                console.log(result);\n            })\n            .catch((error) => {\n                //var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(errorMessage);\n            });\n    };\n\n    // const logOut = () => {\n    //     firebase\n    //         .auth()\n    //         .signOut()\n    //         .then(() => {\n    //             setIsAuthorized(false);\n    //             setUserDetails(null);\n    //             //console.log(\"Sign out successful\", isAuthorized);\n    //         })\n    //         .catch((error) => {\n    //             // An error happened.\n    //         });\n    // };\n\n    const landingComp = () => {\n        return (\n            <div className=\"home-body\">\n                <header className=\"home-showcase\">\n                    <div className=\"home-content md:pt-32\">\n                        <img\n                            src={process.env.PUBLIC_URL + \"/assets/kronos.png\"}\n                            className=\"home-logo text-center m-auto\"\n                            alt=\"Traversy Media\"\n                        ></img>\n                        <div className=\"home-title mb-4\">Kronos Tracker</div>\n                        <div className=\"flex flex-col justify-items-center\">\n                            <button\n                                onClick={logIn}\n                                className=\"flex items-center justify-center bg-red-400 hover:bg-red-700 focus:outline-none text-white font-bold py-2 px-4 rounded w-48 mx-auto \"\n                            >\n                                Continue with\n                                    <img src={process.env.PUBLIC_URL + \"/assets/google.svg\"} style={{ height: \"25px\", width: \"25px\", paddingLeft: \"8px\" }}></img>\n\n                            </button>\n                            <button\n                                onClick={logInAnonymous}\n                                className=\"bg-blue-500 hover:bg-blue-700 text-white flex items-center focus:outline-none justify-center font-bold py-2 px-4 rounded mx-auto w-52 mt-4\"\n                            >\n                                Sign in as guest<FontAwesomeIcon icon={faUser} size=\"2x\" className=\"pl-4\" />\n                            </button></div>\n                    </div>\n                </header>\n            </div>\n        );\n    };\n    const dashboardComp = () => {\n        return (\n            <div>\n                <Dashboard user={userDetails} isAuthorized={isAuthorized} />\n            </div>\n        );\n    };\n    return <div>{!isAuthorized ? landingComp() : dashboardComp()}</div>;\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// import Dashboard from './components/Dashboard/Dashboard';\nimport Home from './page/Home/Home';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={Home}></Route>\n            </Switch>\n            {/* <Dashboard /> */}\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}